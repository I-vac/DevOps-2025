name: minitwit

services:
  mysql:
    image: mysql:8.0
    container_name: minitwit-mysql
    environment:
      MYSQL_ROOT_PASSWORD=devops123
      MYSQL_DATABASE=minitwit_db
      MYSQL_USER=minitwit
      MYSQL_PASSWORD=minitwitpass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-prootpassword"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # BLUE VERSION
  minitwit-blue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minitwit-blue
    ports:
      - "5004:5000"  # exposed for NGINX
      - "9404:9404"
      - "9094:9091"
    volumes:
      # - minitwit-data:/data
      - minitwit-logs:/data/logs
    environment:
      # - DATABASE_URL=jdbc:sqlite:/data/minitwit.db
      - DATABASE_URL=jdbc:mysql://mysql:3306/minitwit_db?user=root
      - METRICS_PORT=9091
      - DATABASE_URL=jdbc:mysql://mysql:3306/minitwit_db?serverTimezone=UTC
      - DB_USER=minitwit
      - DB_PASS=minitwitpass
    depends_on:
      mysql:
        condition: service_healthy
    restart: always

  # GREEN VERSION
  minitwit-green:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: minitwit-green
    ports:
      - "5005:5000"
      - "9406:9404"
      - "9095:9091"
    volumes:
      # - minitwit-data:/data
      - minitwit-logs:/data/logs
    environment:
      # - DATABASE_URL=jdbc:sqlite:/data/minitwit.db
      - DATABASE_URL=jdbc:mysql://mysql:3306/minitwit_db?user=root
      - METRICS_PORT=9091
      - DATABASE_URL=jdbc:mysql://mysql:3306/minitwit_db?serverTimezone=UTC
      - DB_USER=minitwit
      - DB_PASS=minitwitpass    
    depends_on:
      mysql:
        condition: service_healthy
    restart: always

  simulator-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5001:5001"
      - "9405:9404"     # host 9405 → container 9404
      - "9092:9091"    # HTTP /metrics (host 9092 → container 9091)
    volumes:
      # - minitwit-data:/data
      - minitwit-logs:/data/logs
    environment:
      # - DATABASE_URL=jdbc:sqlite:/data/minitwit.db
      - DATABASE_URL=jdbc:mysql://mysql:3306/minitwit_db?user=root
      - "9092:9091"    # HTTP /metrics (host 9092 → container 9091)
      - DATABASE_URL=jdbc:mysql://mysql:3306/minitwit_db?serverTimezone=UTC
      - DB_USER=minitwit
      - DB_PASS=minitwitpas
    depends_on:
      mysql:
        condition: service_healthy
    restart: always

  node-exporter-app:
    image: prom/node-exporter:latest
    command: ["--path.rootfs=/host"]
    volumes:
      - /:/host:ro
    ports:
      - "9101:9100"      # host 9101 → container 9100
    restart: unless-stopped

  cadvisor-app:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8081:8080"      # host 8081 → container 8080
    restart: unless-stopped

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.8.2
    # network_mode: "host"               
    user: root
    volumes:
      - type: bind
        source: ./filebeat.yml
        target: /usr/share/filebeat/filebeat.yml
        read_only: true
      - minitwit-logs:/data/logs:ro
    networks:
      - default

volumes:
  mysql-data:
  # minitwit-data:
  #   external: true
  #   name: minitwit_minitwit-data
  minitwit-logs:
    external: true
    name: minitwit_minitwit-logs
