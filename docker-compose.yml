services:
  minitwit:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "9404:9404"
      - "9091:9091"     # expose HTTP metrics
    volumes:
      - minitwit-data:/data
      - minitwit-logs:/data/logs
    environment:
      - DATABASE_URL=jdbc:sqlite:/data/minitwit.db
      - METRICS_PORT=9091
    restart: always

  simulator-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "5001:5001"
      - "9405:9404"     # host 9405 → container 9404
      - "9092:9091"    # HTTP /metrics (host 9092 → container 9091)
    volumes:
      - minitwit-data:/data
      - minitwit-logs:/data/logs
    environment:
      - DATABASE_URL=jdbc:sqlite:/data/minitwit.db
      - "9092:9091"    # HTTP /metrics (host 9092 → container 9091)
    restart: always

  node-exporter-app:
    image: prom/node-exporter:latest
    command: ["--path.rootfs=/host"]
    volumes:
      - /:/host:ro
    ports:
      - "9101:9100"      # host 9101 → container 9100
    restart: unless-stopped

  cadvisor-app:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8081:8080"      # host 8081 → container 8080
    restart: unless-stopped

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.8.2
    # network_mode: "host"               
    user: root
    volumes:
      - type: bind
        source: ./filebeat.yml
        target: /usr/share/filebeat/filebeat.yml
        read_only: true
      - minitwit-logs:/data/logs:ro
    depends_on:
      - minitwit
    networks:
      - default

volumes:
  # bind to your existing volume named "minitwit_minitwit-data"
  minitwit-data:
    external:
      name: minitwit_minitwit-data
    # name: minitwit_minitwit-data
  minitwit-logs:
    driver: local