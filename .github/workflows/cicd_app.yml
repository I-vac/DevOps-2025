name: CI/CD for Java Application

on:
  workflow_dispatch:
  push:
    branches:
      - feat/monitoring

jobs:
  # 2) Build & run unit tests in Java
  build-test:
    name: Build & Unit Test Java
    runs-on: ubuntu-latest
    # needs: lint-java
    steps:
      - uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Build & run unit tests
        run: mvn clean verify

  # 6) Full end-to-end with both compose files (app + monitoring)
  build-and-test:
    name: Full Docker-Compose Integration Tests
    runs-on: ubuntu-latest
    needs: [build-test]
    steps:
      - uses: actions/checkout@v3

      - name: Build all services
        run: |
          docker compose \
            -f docker-compose.test.yml \
            build

      - name: Start everything
        run: |
          docker compose \
            -f docker-compose.test.yml \
            up -d

      - name: Wait for `/health`
        run: |
          timeout 60 bash -c "until curl -sf http://localhost:5000/health \
            | grep -q '\"status\":\"ok\"'; do
            echo 'waitingâ€¦'
            sleep 5
          done"

      - name: Run API tests
        run: |
          pip install requests
          python3 tests/api_tests.py

  # 7) Deploy if everything above succeeded
  deploy:
    name: Deploy to Droplet
    runs-on: ubuntu-latest
    needs: [build-test, build-and-test]
    steps:
      - uses: actions/checkout@v3

      - name: SSH & Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_APP_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key:      ${{ secrets.DROPLET_SSH_KEY_PRIVATE }}
          script: |
            set -e
            cd ~/DevOps-2025
            git pull
            docker compose down
            docker compose up -d --build
